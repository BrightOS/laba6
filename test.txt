#include <bits/stdc++.h>
#include <windows.h>
using namespace std;

double masA[15][15];
double masB[15][15];
double masC[15][15];
double masD[15][15];
double masE[15][15];
double masR[15][15];
int n,m;
int temp=0;

void Random(double arr[15][15],int N)
{
    srand(time(NULL));
    for(int i=0;i<N;i++)
        for(int j=0;j<N;j++)
            arr[i][j]=rand()%10;
}

void Rukami(double arr[15][15],int N)
{
    for(int i=0;i<N;i++)
        for(int j=0;j<N;j++)
            scanf("%lf",&arr[i][j]);
}

void PrintMas(double arr[15][15],int N)
{
    for(int i=0;i<N;i++)
        {
            printf("|");
            for(int j=0;j<N;j++)
                printf("%10.3lf",arr[i][j]);
            printf("     |\n");
        }
}

void MultMatrix(double arr1[15][15],double arr2[15][15],int N)
{
    for(int i=0; i<N; i++)
        {
            for(int j=0; j<N; j++)
                {
                    masC[i][j]=0;
                    for(int t=0;t<N;t++)
                        masC[i][j]+=arr1[i][t]*arr2[t][j];
                }
        }
}

void SumMatrix(double arr1[15][15],double arr2[15][15],int N)
{
    for(int i=0; i<N; i++)
        for(int j=0;j<N;j++)
            masD[i][j]=arr1[i][j]+arr2[i][j];
}

void RaznMatrix(double arr1[15][15],double arr2[15][15],int N)
{
    for(int i=0; i<N; i++)
        for(int j=0; j<N; j++)
            masR[i][j]=arr1[i][j]-arr2[i][j];
}

void Opredelitel(double arr1[15][15],int N)
{
    double temp1;
    double ans=1;
    for(int i=0;i<N;i++)
        for(int j=0;j<N;j++)
            masC[i][j]=arr1[i][j];

    for(int k=0;k<N;k++)
        {                               //приводим матрицу к верхнетреугольному виду
            for(int i=k+1;i<N;i++)
            {
                if(masC[k][k]==0)
                    {
                        printf("det(A)=0, выражение не определено");        //проверка деления на 0
                        exit(0);
                    }
                temp1=masC[i][k]/masC[k][k];
                for(int j=0;j<N;j++)
                    masC[i][j]-=masC[k][j]*temp1;
            }
        }

    for(int i=0;i<N;i++)                                //считаем det(A) путём умножения чисел главной диагонали
        for(int j=0;j<N;j++)
            if(i==j)
                ans*=masC[i][j];
    if(ans==0)
        {
            printf("det(A)=0, выражение не определено");
            exit(0);
        }
    printf("Определитель=%lf\n",ans);
}

void ObratMatrix(double arr1[15][15],int N)
{
    double temp1;
    for(int i=0;i<N;i++)
        for(int j=0;j<N;j++)
            masC[i][j]=arr1[i][j];

    for(int i=0;i<N;i++)
        for(int j=0;j<N;j++)
            if(i==j)                    //задаем единичную матрицу
                masE[i][j]=1;
            else
                masE[i][j]=0;

    for(int k=0;k<N;k++)
        {               //приводим матрицу к верхнетреугольному виду
            for(int i=k+1;i<N;i++)
                {
                    temp1=masC[i][k]/masC[k][k];
                    for(int j=0;j<N;j++)
                        {
                            masC[i][j]-=masC[k][j]*temp1;
                            masE[i][j]-=masE[k][j]*temp1;
                        }
                }
        }

    for(int k=N-1;k>=0;k--)
        {               //приводим матрицу к виду одной главной диагонали
            for(int i=k-1;i>=0;i--)
                {
                    temp1=masC[i][k]/masC[k][k];
                    for(int j=N-1;j>=0;j--)
                        {
                            masC[i][j]-=masC[k][j]*temp1;
                            masE[i][j]-=masE[k][j]*temp1;
                        }
                }
        }

    for(int i=0;i<N;i++)
        {                   //делим главную диагональ
            for(int j=0;j<N;j++)
                {
                    if(i==j)
                        {
                            for(int k=0;k<N;k++)
                                masE[i][k]/=masC[i][j];
                            masC[i][j]/=masC[i][j];
                        }
                }
        }
    printf("Обратная матрица А:\n");
    PrintMas(masE,N);
}

int main()
{
    setlocale(LC_ALL,"Russian");
    printf("Размер матрицы А = ");
    scanf("%d",&n);
    printf("\n");
    printf("1) Задать матрицу А вручную\n2) Задать матрицу А случайно \n Ваш выбор:");
    scanf("%d",&temp);
    if(temp==1)
        Rukami(masA,n);
    else
        Random(masA,n);
    temp=0;
    printf("\n");
    printf("Размер матрицы B = ");
    scanf("%d",&m);
    printf("\n");
    printf("1) Задать матрицу B вручную\n2) Задать матрицу B случайно \n Ваш выбор:");
    scanf("%d",&temp);
    if(temp==1)
        Rukami(masB,m);
    else
        Random(masB,m);
    temp=0;
    //system("cls");
    printf("\n");
    printf("Матрица А: \n");
    PrintMas(masA,n);
    printf("\n");
    printf("Матрица B: \n");
    PrintMas(masB,m);
    printf("\n");                          //Закончили с матрицами А и В

    if(n!=m)
        {
            printf("Результат не определён для умножения и сложения матриц.");              //сложение матриц
            exit(0);
        }
    else
        {
            SumMatrix(masA,masB,n); //masD
            printf("Результат сложения матриц:\n");
            PrintMas(masD,n);
            printf("\n");
        }

    printf("Результат умножения матриц:\n");
    MultMatrix(masA,masB,n);
    PrintMas(masD,n);
    printf("\n");

    Opredelitel(masA,n);
    printf("\n");

    ObratMatrix(masA,n);
    printf("\n");

    printf("Проверка: ");
    printf("\n");
    printf("\nАХ=В\n\nX:\n");
    MultMatrix(masE,masB,n);
    PrintMas(masC,n);
    printf("\n");

    printf("А*Х:\n");
    for(int i=0;i<n;i++)
        for(int j=0;j<n;j++)
            masD[i][j]=masC[i][j];
    MultMatrix(masA,masD,n);
    PrintMas(masC,n);
    printf("\n");

    printf("А*Х-B:\n");
    for(int i=0;i<n;i++)
        for(int j=0;j<n;j++)
            masD[i][j]=masC[i][j]; //masC - MultMatrix. masD - SumMatrix
    MultMatrix(masA,masD,n);
    RaznMatrix(masD,masB,n);
    PrintMas(masR,n);
    printf("\n");


    printf("А*A^-1:\n");
    MultMatrix(masA,masE,n);
    PrintMas(masC,n);
    printf("\n");

    printf("А^-1*A:\n");
    MultMatrix(masA,masE,n);
    PrintMas(masC,n);
    printf("\n");
}
